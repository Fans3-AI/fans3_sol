/**
 * [TEST]Voice Agent API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class TextToSpeechCreate {
    'voiceId': number;
    'text': string;
    'chunkLength'?: number;
    'format'?: TextToSpeechCreateFormatEnum;
    'seed'?: number | null;
    'useMemoryCache'?: TextToSpeechCreateUseMemoryCacheEnum;
    'normalize'?: boolean;
    'maxNewTokens'?: number;
    'topP'?: number;
    'repetitionPenalty'?: number;
    'temperature'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "voiceId",
            "baseName": "voice_id",
            "type": "number",
            "format": ""
        },
        {
            "name": "text",
            "baseName": "text",
            "type": "string",
            "format": ""
        },
        {
            "name": "chunkLength",
            "baseName": "chunk_length",
            "type": "number",
            "format": ""
        },
        {
            "name": "format",
            "baseName": "format",
            "type": "TextToSpeechCreateFormatEnum",
            "format": ""
        },
        {
            "name": "seed",
            "baseName": "seed",
            "type": "number",
            "format": ""
        },
        {
            "name": "useMemoryCache",
            "baseName": "use_memory_cache",
            "type": "TextToSpeechCreateUseMemoryCacheEnum",
            "format": ""
        },
        {
            "name": "normalize",
            "baseName": "normalize",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "maxNewTokens",
            "baseName": "max_new_tokens",
            "type": "number",
            "format": ""
        },
        {
            "name": "topP",
            "baseName": "top_p",
            "type": "number",
            "format": ""
        },
        {
            "name": "repetitionPenalty",
            "baseName": "repetition_penalty",
            "type": "number",
            "format": ""
        },
        {
            "name": "temperature",
            "baseName": "temperature",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return TextToSpeechCreate.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum TextToSpeechCreateFormatEnum {
    Wav = 'wav',
    Pcm = 'pcm',
    Mp3 = 'mp3'
}
export enum TextToSpeechCreateUseMemoryCacheEnum {
    On = 'on',
    Off = 'off'
}

